#!/bin/bash

echo "üîç Sprawdzanie konfiguracji backendu..."
echo ""

# Sprawd≈∫ FFmpeg
echo "1Ô∏è‚É£ Sprawdzanie FFmpeg..."
if command -v ffmpeg &> /dev/null; then
    echo "   ‚úÖ FFmpeg zainstalowany: $(ffmpeg -version 2>&1 | head -n1)"
else
    echo "   ‚ùå FFmpeg NIE zainstalowany!"
    echo "      Zainstaluj: brew install ffmpeg (macOS)"
    echo ""
    exit 1
fi
echo ""

# Sprawd≈∫ zale≈ºno≈õci serwera
echo "2Ô∏è‚É£ Sprawdzanie zale≈ºno≈õci serwera..."
if [ -d "server/node_modules" ]; then
    echo "   ‚úÖ Zale≈ºno≈õci zainstalowane"
else
    echo "   ‚ö†Ô∏è  Zale≈ºno≈õci NIE zainstalowane!"
    echo "      Uruchom: cd server && npm install"
    echo ""
fi
echo ""

# Sprawd≈∫ czy port 3001 jest wolny
echo "3Ô∏è‚É£ Sprawdzanie portu 3001..."
if lsof -Pi :3001 -sTCP:LISTEN -t >/dev/null 2>&1 ; then
    echo "   ‚ö†Ô∏è  Port 3001 jest zajƒôty (mo≈ºliwe ≈ºe backend ju≈º dzia≈Ça)"
    echo "      PID: $(lsof -Pi :3001 -sTCP:LISTEN -t)"
else
    echo "   ‚úÖ Port 3001 wolny"
fi
echo ""

# Sprawd≈∫ modele
echo "4Ô∏è‚É£ Sprawdzanie modeli Whisper..."
if [ -d "public/models/Xenova/whisper-tiny" ]; then
    echo "   ‚úÖ whisper-tiny znaleziony"
else
    echo "   ‚ö†Ô∏è  whisper-tiny NIE znaleziony w public/models"
fi

if [ -d "public/models/Xenova/whisper-base" ]; then
    echo "   ‚úÖ whisper-base znaleziony"
else
    echo "   ‚ö†Ô∏è  whisper-base NIE znaleziony w public/models"
fi
echo ""

echo "‚úÖ Sprawdzanie zako≈Ñczone!"
echo ""
echo "üöÄ Aby uruchomiƒá backend:"
echo "   cd server && npm start"
echo ""
